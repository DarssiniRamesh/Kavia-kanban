{"is_source_file": true, "format": "JavaScript (React component)", "description": "This file defines a React component called Toolbar, responsible for handling user interactions related to project management features such as adding columns, bulk uploading cards from Excel files, and downloading Excel templates within a Kanban board application.", "external_files": ["../KanbanContext", "react", "react-dom", "xlsx", "../KanbanBoard"], "external_methods": ["useKanban", "useFeedback", "XLSX.utils.aoa_to_sheet", "XLSX.utils.book_new", "XLSX.utils.book_append_sheet", "XLSX.writeFile", "XLSX.read", "XLSX.utils.sheet_to_json", "require('xlsx').SSF.format"], "published": ["default"], "classes": [], "methods": [{"name": "downloadExcelTemplate()", "description": "Generates and triggers download of an Excel template with predefined columns and sample data for bulk task creation.", "scope": "", "scopeKind": ""}, {"name": "handleAddColumn", "description": "Handles UI interaction to show modal for adding a new column."}, {"name": "handleAddColumnSubmit", "description": "Submits new column data, validates input, adds the column via context method, and provides user feedback."}, {"name": "handleExcelUpload", "description": "Processes uploaded Excel files, reads data, and displays a modal to select target column for bulk import."}, {"name": "handleConfirmBulkUpload", "description": "Handles bulk upload confirmation, parses Excel data into task objects, validates, and inserts them into the project, with error handling."}, {"name": "Toolbar()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["useRef()", "useState()", "showToast()", "addColumn()", "bulkInsertCards()", "setAddColumnModal()", "setBulkUploadState()", "XLSX.read()", "XLSX.utils.sheet_to_json()", "XLSX.utils.aoa_to_sheet()", "XLSX.utils.book_new()", "XLSX.utils.book_append_sheet()", "XLSX.writeFile()", "require('xlsx').SSF.format", "ReactDOM.createPortal()"], "search-terms": ["Toolbar", "bulkUpload", "ExcelTemplate", "addColumn", "KanbanContext", "XLSX", "ReactJS"], "state": 2, "file_id": 24, "knowledge_revision": 178, "git_revision": "651191588326df2a2b535938fdc60a1a8b304264", "revision_history": [{"49": "4379c7fc7fa7efef935c58c56c6c2dcbd7599fd9"}, {"59": "c49a1f8b511ee49e6fb7cb26de7518cd6ff6ba32"}, {"79": "65a8043722ff9d0a39f07db2cfe20f15382e1ca0"}, {"82": "bcb6ca22a088289436964b5f38a7336edcd4fb5e"}, {"104": "b1391d2c5df040ca72615d6e8358f2d7b08773d7"}, {"105": "6927ca1adaae9d279a8b5940bea9d4a587e7c344"}, {"115": "ae335b0f46d7b8a8bc7d01a9ab3000477ddb026b"}, {"116": "ec3a7315ddf143336df9b6961d4e034706550076"}, {"171": "c8764ecc36553ffc05e81c0fce03aad5cde0d2bc"}, {"178": "651191588326df2a2b535938fdc60a1a8b304264"}], "ctags": [{"_type": "tag", "name": "Toolbar", "path": "/home/kavia/workspace/code-generation/kavia-kanbansync-106823-fd4e91f2/kavia_kanbansync/src/components/Toolbar.js", "pattern": "/^function Toolbar() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "downloadExcelTemplate", "path": "/home/kavia/workspace/code-generation/kavia-kanbansync-106823-fd4e91f2/kavia_kanbansync/src/components/Toolbar.js", "pattern": "/^function downloadExcelTemplate() {$/", "language": "JavaScript", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "handleExcelUpload", "path": "/home/kavia/workspace/code-generation/kavia-kanbansync-106823-fd4e91f2/kavia_kanbansync/src/components/Toolbar.js", "pattern": "/^            onChange={handleExcelUpload}$/", "language": "JavaScript", "kind": "field", "scope": "onChange", "scopeKind": "class"}, {"_type": "tag", "name": "inputRef", "path": "/home/kavia/workspace/code-generation/kavia-kanbansync-106823-fd4e91f2/kavia_kanbansync/src/components/Toolbar.js", "pattern": "/^            ref={inputRef}$/", "language": "JavaScript", "kind": "field", "scope": "ref", "scopeKind": "class"}], "hash": "f046964817a0be5c741f647dcd214071", "format-version": 4, "code-base-name": "default", "filename": "kavia_kanbansync/src/components/Toolbar.js", "fields": [{"name": "onChange={handleExcelUpload}", "scope": "onChange", "scopeKind": "class", "description": "unavailable"}, {"name": "ref={inputRef}", "scope": "ref", "scopeKind": "class", "description": "unavailable"}]}